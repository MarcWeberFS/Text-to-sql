name: Build & Push Docker Images

on:
  push:
    branches: [ master ]

env:
  AWS_REGION: eu-central-2
  ECR_REGISTRY: 471112976468.dkr.ecr.eu-central-2.amazonaws.com

jobs:
  deploy-to-ec2:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            aws ecr get-login-password --region eu-central-2 | docker login --username AWS --password-stdin 471112976468.dkr.ecr.eu-central-2.amazonaws.com

            docker pull 471112976468.dkr.ecr.eu-central-2.amazonaws.com/text-to-sql-backend:latest
            docker pull 471112976468.dkr.ecr.eu-central-2.amazonaws.com/text-to-sql-frontend:latest

            docker stop backend || true && docker rm backend || true
            docker stop frontend || true && docker rm frontend || true

            docker run -d \
              --name backend \
              -p 8080:8080 \
              -e DB_URL="${{ secrets.DB_URL }}" \
              -e DB_USER="${{ secrets.DB_USER }}" \
              -e DB_PASS="${{ secrets.DB_PASS }}" \
              -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
              -e CLAUDE_API_KEY="${{ secrets.CLAUDE_API_KEY }}" \
              -e GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}" \
              -e DEEPSEEK_API_KEY="${{ secrets.DEEPSEEK_API_KEY }}" \
              -e GROK_API_KEY="${{ secrets.GROK_API_KEY }}" \
              471112976468.dkr.ecr.eu-central-2.amazonaws.com/text-to-sql-backend:latest

            docker run -d \
              --name frontend \
              -p 3000:80 \
              471112976468.dkr.ecr.eu-central-2.amazonaws.com/text-to-sql-frontend:latest
